services:
  tailscale:
    image: tailscale/tailscale:latest
    environment:
      - TS_AUTHKEY=file:/run/secrets/ts_authkey
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_HOSTNAME=${COMPOSE_PROJECT_NAME}
      - TS_USERSPACE=false
      - TS_ACCEPT_DNS=true
      - TS_AUTH_ONCE=true
    networks:
      - default
      - tailscale-internal
    volumes:
      - ts_state:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    secrets:
      - ts_authkey
    healthcheck:
      test: ["CMD-SHELL", "tailscale status"]
      interval: 10s
      timeout: 5s
      retries: 60
    restart: unless-stopped

volumes:
  ts_state:

secrets:
  ts_authkey:
    file: ../../secrets/ts_authkey

networks:
  default:
    enable_ipv6: true
  # use a separate bridge network to allow direct access between tailscale
  # containers on the same host. without this, connections will use relays.
  # create the network ahead of time with:
  # docker network create --internal --ipv6 tailscale-internal
  tailscale-internal:
    # external because it's managed outside of this compose file
    external: true
    name: tailscale-internal
